{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","resetHighScore","setState","highScore","localStorage","setItem","getRandomInt","min","max","state","sixBoxMode","Math","ceil","floor","random","showPattern","currPat","i","setTimeout","blink","length","boxId","speed","handleClick","id","userPattern","rotatingLights","rotations","boxArr","startFunc","disabled","gameStarted","audioAuto","compPat","compPattern","restartFunc","randNum","displayGame","score","difficultyLevel","sixBoxToggle","box1","box2","box3","box4","box5","box6","audioControl","getItem","autoAudio","this","inputArr","compArr","isCorrect","map","item","index","includes","newRandNum","difNum","difClass","disableClick","boxDataArr","color","radius","addBoxArr","splice","boxElArr","box","key","active","FormControlLabel","className","control","Switch","checked","size","onChange","value","label","labelPlacement","onClick","IconButton","aria-label","controls","autoPlay","src","type","style","display","Button","React","Component","Box","props","opacity","boxStyle","pointerEvents","borderRadius","backgroundColor","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qVAaMA,E,YACJ,aAAc,IAAD,8BACX,+CAiEFC,eAAe,WACb,EAAKC,SAAS,CAACC,UAAU,IACzBC,aAAaC,QAAQ,YAAY,IApEtB,EAuEbC,aAAa,WACX,IAAIC,EAAM,EACNC,EAAM,EAMV,OALG,EAAKC,MAAMC,aACZF,EAAM,GAERD,EAAMI,KAAKC,KAAKL,GAChBC,EAAMG,KAAKE,MAAML,GACVG,KAAKE,MAAMF,KAAKG,UAAYN,EAAMD,IAAQA,GA/EtC,EAkFbQ,YAAY,SAACC,GACX,IADsB,IAAD,WACbC,GACNC,WAAW,WACT,EAAKC,MAAMH,EAAQC,GAAI,MACtB,KAAKA,EAAE,KAHJA,EAAE,EAAEA,EAAED,EAAQI,OAAOH,IAAK,EAA1BA,IAnFG,EA0FbE,MAAM,SAACE,EAAOC,GACV,EAAKpB,SAAL,eAAgB,MAAMmB,GAAQ,IAC9BH,WAAW,WACT,EAAKhB,SAAL,eAAgB,MAAMmB,GAAQ,KAC7BC,IA9FM,EAiGbC,YAAY,SAACC,GACX,EAAKL,MAAMK,EAAI,KACf,EAAKtB,SAAS,CACZuB,YAAY,GAAD,mBAAM,EAAKhB,MAAMgB,aAAjB,CAA8BD,OApGhC,EAwGbE,eAAe,SAACC,GAEd,IADA,IAAIC,EAAS,CAAC,EAAE,EAAE,EAAE,GADM,WAElBX,GACNC,WAAW,WACT,EAAKC,MAAMS,EAAOX,EAAE,GAAG,MACtB,KAAKA,EAAE,KAHJA,EAAE,EAAEA,EAAE,EAAEU,EAAUV,IAAK,EAAvBA,IA1GG,EAiHbY,UAAU,WACR,EAAK3B,SAAS,CAAC4B,UAAS,EAAOC,aAAY,EAAMC,WAAU,IAC3D,IAAIC,EAAU,EAAKxB,MAAMyB,YACzB,EAAKnB,YAAYkB,IApHN,EAsHbE,YAAY,WACV,IAAIC,EAAU,EAAK9B,eACnB,EAAKJ,SAAS,CAACmC,aAAY,EAAMC,MAAM,EAAGJ,YAAY,CAACE,GAAUX,YAAY,GAAIc,gBAAgB,IACjG,EAAKxB,YAAY,CAACqB,KAzHP,EA2HbI,aAAa,WACX,EAAKtC,SAAS,CAACQ,YAAa,EAAKD,MAAMC,cA1HvC,EAAKD,MAAM,CACT6B,MAAM,EACNnC,UAAU,EACVsC,MAAK,EACLC,MAAK,EACLC,MAAK,EACLC,MAAK,EACLC,MAAK,EACLC,MAAK,EACLP,gBAAgB,EAChB7B,YAAW,EACXoB,UAAS,EACTO,aAAY,EACZN,aAAY,EACZG,YAAY,GACZT,YAAY,GACZO,WAAU,EACVe,cAAa,GAnBJ,E,iFAwBX,IAAI5C,EAAYC,aAAa4C,QAAQ,aACjCC,EAAY7C,aAAa4C,QAAQ,aACjCZ,EAAUc,KAAK5C,eAEnB4C,KAAKxB,eAAe,GACpBwB,KAAKhD,SAAS,CAAEC,YAAW+B,YAAY,GAAD,mBAAMgB,KAAKzC,MAAMyB,aAAjB,CAA8BE,IAAUa,UAAWA,M,2CAIzF,IAAIE,EAAWD,KAAKzC,MAAMgB,YACtB2B,EAAUF,KAAKzC,MAAMyB,YAKrBmB,GAHUF,EAASG,IAAI,SAACC,EAAMC,GAChC,OAAOD,IAASH,EAAQI,KAEDC,UAAS,GAKlC,IAHiB,IAAdJ,IAAiD,IAA3BH,KAAKzC,MAAM4B,aAClCa,KAAKhD,SAAS,CAACmC,aAAY,IAE1Be,EAAQhC,QAAU+B,EAAS/B,QAAUiC,EAAU,CAChDH,KAAKhD,SAAS,CAACoC,MAAMY,KAAKzC,MAAM6B,MAAQ,IAExC,IAAIoB,EAAaR,KAAK5C,eACtB4C,KAAKhD,SAAS,CAACuB,YAAY,GAAIS,YAAY,GAAD,mBAAMgB,KAAKzC,MAAMyB,aAAjB,CAA8BwB,MAExER,KAAKnC,YAAL,sBAAqBqC,GAArB,CAA8BM,KAEhC,IAAIpB,EAAQY,KAAKzC,MAAM6B,MAEpBA,EAAQ,GAAKY,KAAKzC,MAAM8B,gBAAkB,EAC3CW,KAAKhD,SAAS,CAACqC,gBAAgB,IACvBD,EAAQ,GAAKY,KAAKzC,MAAM8B,gBAAkB,GAClDW,KAAKhD,SAAS,CAACqC,gBAAgB,IAG9BD,EAAQY,KAAKzC,MAAMN,YACpB+C,KAAKhD,SAAS,CAACC,UAAUmC,IACzBlC,aAAaC,QAAQ,YAAYiC,M,+BAiE5B,IAAD,OAEFqB,EAAST,KAAKzC,MAAM8B,gBACpBqB,EAAW,GACD,IAAXD,EACDC,EAAS,SACU,IAAXD,IACRC,EAAS,QAEX,IAAIC,EAAeX,KAAKzC,MAAMqB,SAAW,OAAS,OAgB9CgC,EAAa,CAAC,CAChBtC,GAAG,EACHuC,MAhBQ,UAiBRC,OAVU,eAWV,CACAxC,GAAG,EACHuC,MAnBU,UAoBVC,OAbW,eAcX,CACAxC,GAAG,EACHuC,MAtBW,YAuBXC,OAhBa,eAiBb,CACAxC,GAAG,EACHuC,MAzBS,UA0BTC,OAnBc,gBAsBZC,EAAY,CAAC,CACfzC,GAAG,EACHuC,MA9BW,YA+BXC,OAxBS,KAyBT,CACAxC,GAAG,EACHuC,MAjCc,YAkCdC,OA5BS,MA+BRd,KAAKzC,MAAMC,aACZoD,EAAWI,OAAO,EAAE,EAAED,EAAU,IAChCH,EAAWI,OAAO,EAAE,EAAED,EAAU,KAGlC,IAAIE,EAAWL,EAAWR,IAAI,SAACc,GAC7B,OAAO,kBAAC,EAAD,CAAKC,IAAKD,EAAI5C,GAAIA,GAAI4C,EAAI5C,GAAIM,SAAU+B,EAAcS,OAAQ,EAAK7D,MAAM,MAAQ2D,EAAI5C,IAAKD,YAAa,EAAKA,YAAayC,OAAQI,EAAIJ,OAAQD,MAAOK,EAAIL,UAGjK,OACE,yBAAKvC,GAAG,WACN,+CACE,kBAAC+C,EAAA,EAAD,CACEC,UAAU,iBACVC,QACE,kBAACC,EAAA,EAAD,CACEC,QAASzB,KAAKzC,MAAMC,WACpBkE,KAAK,QACLC,SAAU3B,KAAKV,aACfsC,MAAM,WACNf,MAAM,YAGVgB,MAAM,WACNC,eAAe,QAGnB,yBAAKxD,GAAG,SAAS,kBAAoB0B,KAAKzC,MAAM6B,OAChD,6BAAM,eAAiBY,KAAKzC,MAAMN,UAAU,0BAAMqB,GAAG,iBAAiByD,QAAS/B,KAAKjD,gBAAxC,WAE5C,kBAACiF,EAAA,EAAD,CAAYD,QAAS,kBAAI,EAAK/E,SAAS,CAAC6C,cAAc,EAAKtC,MAAMsC,gBAAgBgB,MAAM,YAAYoB,aAAW,qBAC5G,kBAAC,IAAD,CAAepB,MAAM,aAEvB,2BAAOqB,SAAUlC,KAAKzC,MAAMsC,cAAgB,WAAYsC,WAAUnC,KAAKzC,MAAMuB,WAAY,YACvF,4BAAQsD,IAAI,cAAcC,KAAK,cADjC,oDAKA,yBAAK/D,GAAG,aAAagD,UAAWZ,EAAW,MAAQV,KAAKzC,MAAMC,YAAc,gBAAiB8E,MAAO,CAACC,SAASvC,KAAKzC,MAAM4B,aAAe,SACrI8B,GAEDjB,KAAKzC,MAAMsB,YAAqE,kBAAC2D,EAAA,EAAD,CAAQT,QAAS/B,KAAKf,aAAtB,gBAAvD,kBAACuD,EAAA,EAAD,CAAQT,QAAS/B,KAAKrB,WAAtB,cAC3B,kBAAC6D,EAAA,EAAD,CAAQlE,GAAG,gBAAgByD,QAAS,kBAAI,EAAKlE,YAAY,EAAKN,MAAMyB,eAApE,qB,GA/NUyD,IAAMC,WAqOlBC,EAAM,SAACC,GACX,IAAIC,EAAUD,EAAMxB,OAAS,MAAQ,MACjC0B,EAAW,CACbC,cAAeH,EAAMhE,SACrBoE,aAAcJ,EAAM9B,OACpBmC,gBAAiB,QAAUL,EAAM/B,MAAO,IAAKgC,EAAU,KAEzD,OACE,yBAAKd,QAAS,WAAKa,EAAMvE,YAAYuE,EAAMtE,KAAMgD,UAAU,aAAagB,MAAOQ,KAKpEhG,ICnPKoG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.8e838149.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MusicNoteIcon from '@material-ui/icons/MusicNote';\n\n// add slider to blink response speed\n// add settings model with audio, difficulty level and reset highscore\n// \n\nclass App extends React.Component{\n  constructor(){\n    super();\n    this.state={\n      score:0,\n      highScore:0,\n      box1:false,\n      box2:false,\n      box3:false,\n      box4:false,\n      box5:false,\n      box6:false,\n      difficultyLevel:1,\n      sixBoxMode:false,\n      disabled:true,\n      displayGame:true,\n      gameStarted:false,\n      compPattern:[],\n      userPattern:[],\n      audioAuto:false,\n      audioControl:false\n    }\n  }\n\n  componentDidMount(){\n    let highScore = localStorage.getItem('highScore');\n    let autoAudio = localStorage.getItem('audioAuto');\n    let randNum = this.getRandomInt();\n\n    this.rotatingLights(3);\n    this.setState({ highScore, compPattern: [...this.state.compPattern, randNum], autoAudio: autoAudio });\n  }\n\n  componentDidUpdate(){\n    let inputArr = this.state.userPattern;\n    let compArr = this.state.compPattern;\n\n    let boolArr = inputArr.map((item, index)=>{\n      return item === compArr[index];\n    })\n    let isCorrect = !boolArr.includes(false);\n\n    if(isCorrect !== true && this.state.displayGame === true) {\n      this.setState({displayGame:false})\n    }\n    if(compArr.length <= inputArr.length && isCorrect){\n      this.setState({score:this.state.score + 1})\n\n      let newRandNum = this.getRandomInt();\n      this.setState({userPattern:[], compPattern: [...this.state.compPattern, newRandNum]});\n\n      this.showPattern([...compArr, newRandNum]);\n    }\n    let score = this.state.score;\n\n    if(score > 2 && this.state.difficultyLevel < 2){\n      this.setState({difficultyLevel:2});\n    } else if(score > 4 && this.state.difficultyLevel < 3){\n      this.setState({difficultyLevel:3});\n    }\n\n    if(score > this.state.highScore){\n      this.setState({highScore:score});\n      localStorage.setItem('highScore',score);\n    }\n  }\n\n  resetHighScore=()=>{\n    this.setState({highScore:0});\n    localStorage.setItem('highScore',0);\n  }\n\n  getRandomInt=()=>{\n    let min = 1;\n    let max = 5;\n    if(this.state.sixBoxMode){\n      max = 7;\n    }\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n\n  showPattern=(currPat)=>{\n    for(let i=0;i<currPat.length;i++){\n      setTimeout(()=>{\n        this.blink(currPat[i], 300);\n      }, 800*(i+1))\n    }\n  }\n\n  blink=(boxId, speed)=>{\n      this.setState({[\"box\"+boxId]: true});\n      setTimeout(()=>{\n        this.setState({[\"box\"+boxId]: false});\n      }, speed)\n  }\n\n  handleClick=(id)=>{\n    this.blink(id, 300);\n    this.setState({\n      userPattern: [...this.state.userPattern, id]\n    });\n  }\n\n  rotatingLights=(rotations)=>{\n    let boxArr = [1,2,3,4];\n    for(let i=1;i<5*rotations;i++){\n      setTimeout(()=>{\n        this.blink(boxArr[i%4],150);\n      }, 100*(i+1))\n    }\n  }\n\n  startFunc=()=>{\n    this.setState({disabled:false, gameStarted:true, audioAuto:true})\n    let compPat = this.state.compPattern;\n    this.showPattern(compPat);\n  }\n  restartFunc=()=>{\n    let randNum = this.getRandomInt();\n    this.setState({displayGame:true, score:0, compPattern:[randNum], userPattern:[], difficultyLevel:1})\n    this.showPattern([randNum]);\n  }\n  sixBoxToggle=()=>{\n    this.setState({sixBoxMode: !this.state.sixBoxMode});\n  }\n\n  render(){\n\n    let difNum = this.state.difficultyLevel;\n    let difClass = \"\";\n    if(difNum === 2){\n      difClass=\"medium\"\n    } else if(difNum === 3) {\n      difClass=\"hard\"\n    }\n    let disableClick = this.state.disabled ? \"none\" : \"auto\";\n\n    let red = \"255,0,0\";\n    let green = \"0,255,0\";\n    let yellow = \"255,255,0\";\n    let blue = \"0,0,255\";\n    let orange = \"255,128,0\";\n    let lightBlue = \"0,255,255\";\n\n    let topLeft=\"100px 0 0 0\";\n    let topRight=\"0 100px 0 0\";\n    let bottomLeft=\"0 0 0 100px\";\n    let bottomRight=\"0 0 100px 0\";\n    let middle=\"0\";\n\n\n    let boxDataArr = [{\n      id:1,\n      color:red,\n      radius:topLeft\n    },{\n      id:2,\n      color:green,\n      radius:topRight\n    },{\n      id:4,\n      color:yellow,\n      radius:bottomLeft\n    },{\n      id:3,\n      color:blue,\n      radius:bottomRight\n    }];\n\n    let addBoxArr = [{\n      id:5,\n      color:orange,\n      radius:middle\n    },{\n      id:6,\n      color:lightBlue,\n      radius:middle\n    }]\n\n    if(this.state.sixBoxMode){\n      boxDataArr.splice(1,0,addBoxArr[0])\n      boxDataArr.splice(4,0,addBoxArr[1])\n    }\n\n    let boxElArr = boxDataArr.map((box)=>{\n      return <Box key={box.id} id={box.id} disabled={disableClick} active={this.state[\"box\" + box.id]} handleClick={this.handleClick} radius={box.radius} color={box.color}/>\n    });\n\n    return(\n      <div id=\"wrapper\">\n        <h1>Simon Unleashed</h1>\n          <FormControlLabel\n            className=\"hardcoreToggle\"\n            control={\n              <Switch\n                checked={this.state.sixBoxMode}\n                size=\"small\"\n                onChange={this.sixBoxToggle}\n                value=\"checkedB\"\n                color=\"primary\"\n              />\n            }\n            label=\"Hardcore\"\n            labelPlacement=\"top\"\n          />\n\n        <div id=\"score\">{\"Current Score: \" + this.state.score}</div>\n        <div>{\"High Score: \" + this.state.highScore}<span id=\"resetHighScore\" onClick={this.resetHighScore}> Reset</span></div>\n\n        <IconButton onClick={()=>this.setState({audioControl:!this.state.audioControl})} color=\"secondary\" aria-label=\"toggle music menu\">\n          <MusicNoteIcon color=\"primary\"/>\n        </IconButton>\n        <audio controls={this.state.audioControl && \"controls\"} autoPlay={this.state.audioAuto ? \"autoplay\" : false}>\n          <source src=\"onandon.ogg\" type=\"audio/ogg\" />\n          Your browser does not support the audio element.\n        </audio>\n\n        <div id=\"boxWrapper\" className={difClass + \" \" + (!this.state.sixBoxMode && \"defaultWidth\")} style={{display:!this.state.displayGame && \"none\"}}>\n          {boxElArr}\n        </div>\n        {!this.state.gameStarted ? <Button onClick={this.startFunc}>Start Game</Button> : <Button onClick={this.restartFunc}>Restart Game</Button>}\n        <Button id=\"showPatButton\" onClick={()=>this.showPattern(this.state.compPattern)}>Show Pattern</Button>\n      </div>\n    )\n  }\n}\n\nconst Box = (props) => {\n  let opacity = props.active ? \".75\" : \".25\";\n  let boxStyle = {\n    pointerEvents: props.disabled,\n    borderRadius: props.radius,\n    backgroundColor: \"rgba(\" + props.color +\",\"+ opacity + \")\"\n  }\n  return(\n    <div onClick={()=>{props.handleClick(props.id)}} className=\"boxStyling\" style={boxStyle}></div>\n  )\n}\n\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}